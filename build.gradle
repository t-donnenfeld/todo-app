plugins {
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.openapi.generator" version "7.11.0"
	id 'java'
	id "jacoco"
	id "org.sonarqube" version "6.0.1.5171"
}

group = 'ch.cern'
version = '1.0.0-SNAPSHOT'
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

sonar {
	properties {
		property "sonar.projectKey", "t-donnenfeld_todo-app"
		property "sonar.organization", "t-donnenfeld"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/static/swagger.yml")
	outputDir.set("$buildDir/generated")
	apiPackage.set("$group" + ".todo.openapi.api")
	invokerPackage.set("$group" + ".todo.openapi.invoker")
	modelPackage.set("$group" + ".todo.openapi.model")
	configOptions = [
			interfaceOnly: "true",
			useSpringBoot3: "true"
	]
	typeMappings.put("DateTime","LocalDateTime")
	importMappings.put("LocalDateTime","java.time.LocalDateTime")
}

jacocoTestReport {
	reports {
		xml.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: 'ch/cern/todo/openapi/**')
		}))
	}
}

project.tasks["sonar"].dependsOn "jacocoTestReport"

compileJava.dependsOn "openApiGenerate"


sourceSets {
	main {
		java.srcDirs += ['src/main/java', 'build/generated/src/main/java']
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.openapitools:openapi-generator-gradle-plugin:7.11.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'

	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok:1.18.36'

	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	testCompileOnly 'org.projectlombok:lombok:1.18.36'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

configurations.configureEach {
	exclude group: 'org.slf4j', module: 'slf4j-simple'
}

tasks.named('test') {
	useJUnitPlatform()
}
